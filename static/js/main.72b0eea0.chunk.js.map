{"version":3,"sources":["components/Picture/Picture.module.css","components/WordContainer/WordContainer.module.css","containers/Pictures/Pictures.module.css","components/Button/Button.module.css","containers/Gameboard/Gameboard.module.css","components/WordsRow/WordsRow.module.css","components/Buttons/Buttons.module.css","components/Word/Word.module.css","components/Board/Board.module.css","components/Button/Button.js","components/Buttons/Buttons.js","components/Picture/Picture.js","containers/Pictures/Pictures.js","components/Word/Word.js","components/WordsRow/WordsRow.js","components/WordContainer/WordContainer.js","components/Board/Board.js","components/WordLibrary/WordLibrary.js","containers/Gameboard/Gameboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","button","props","styles","classes","btn","danger","push","btnDanger","className","Button","join","onClick","click","disabled","name","buttons","Buttons","addWordClick","btnShow","openWord","status","createWordClick","matchWordsClick","matchWordEligible","Picture","show","word","this","pop","hide","invisible","hidePic","bind","Component","Pictures","state","img","words","wordLibrary","imgStatus","imageClickHandler","newState","JSON","parse","stringify","clickedWord","setState","PictureRow","hiddenWords","includes","Word","WordsRow","map","key","iconClick","icon","wordcontainer","allWords","WordContainer","length","hideWordContainer","WordsSelectedText","wordsSet","index","board","Board","wordSetArray","setA","solutions","setB","setC","setD","setE","setF","Math","floor","random","Gameboard","addWordEligible","createdWords","wordAddable","matchEligible","finalizedWords","createWordClickHandler","flat","Infinity","newWordArray","wordsCopy","addWordClickHandler","clikedWordHandler","rowDeleteHandler","rowIndex","updatedHiddenWords","filter","element","wordsCreated","splice","matchWordsHandler","individualArr","myWords","every","ai","alert","window","location","reload","message","style","letterSpacing","color","fontWeight","fontSize","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,2B,qBCAzHD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,kBAAoB,yCAAyC,kBAAoB,2C,gBCAxJD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,IAAM,oBAAoB,UAAY,0BAA0B,QAAU,0B,gBCA5HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,6B,gBCArED,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,yB,kBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,6OCmBXC,EAjBA,SAACC,GACd,IAAMC,EAAS,CAACC,IAAQC,KAIxB,OAHIH,EAAMI,QACRH,EAAOI,KAAKH,IAAQI,WAGpB,yBAAKC,UAAWL,IAAQM,QACtB,4BACED,UAAWN,EAAOQ,KAAK,KACvBC,QAASV,EAAMW,MACfC,SAAUZ,EAAMY,UAEfZ,EAAMa,Q,iBCaAC,EAxBC,SAACd,GACf,OACE,yBAAKO,UAAWL,IAAQa,SACtB,kBAACP,EAAD,CACEK,KAAK,kBACLF,MAAOX,EAAMgB,aACbJ,UAAWZ,EAAMiB,QACjBC,SAAUlB,EAAMmB,SAElB,kBAACX,EAAD,CACEK,KAAK,kBACLF,MAAOX,EAAMoB,gBACbR,UAAWZ,EAAMmB,OACjBD,SAAUlB,EAAMmB,SAElB,kBAACX,EAAD,CACEK,KAAK,kBACLF,MAAOX,EAAMqB,gBACbT,UAAWZ,EAAMsB,kBACjBlB,QAAM,M,gCCWCmB,E,iLA7BX,IAAMtB,EAAS,CAACC,IAAQqB,QAASrB,IAAQsB,MACrCC,EAAOC,KAAK1B,MAAMyB,KAetB,MAd0B,SAAtBC,KAAK1B,MAAMmB,QACblB,EAAO0B,IAAIzB,IAAQsB,MACnBvB,EAAOI,KAAKH,IAAQ0B,MACpBH,EAAO,eACwB,SAAtBC,KAAK1B,MAAMmB,SACpBlB,EAAO0B,IAAIzB,IAAQ0B,MACnB3B,EAAOI,KAAKH,IAAQsB,MACpBC,EAAOC,KAAK1B,MAAMyB,MAGhBC,KAAK1B,MAAM6B,WACb5B,EAAOI,KAAKH,IAAQ4B,SAIpB,yBACEpB,QAASgB,KAAK1B,MAAMW,MAAMoB,KAAKL,KAAMA,KAAK1B,MAAMyB,MAChDlB,UAAWN,EAAOQ,KAAK,MAEvB,6BACE,4BAAKgB,S,GAxBOO,aCoJPC,E,2MAlJbC,MAAQ,CACNC,IAAK,CACHC,MAAO,CACL,CACEX,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,QAEb,CACEb,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,QAEb,CACEb,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,QAEb,CACEb,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,QAEb,CACEb,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,QAEb,CACEb,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,QAEb,CACEb,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,QAEb,CACEb,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,QAEb,CACEb,KAAM,EAAKzB,MAAMqC,YAAYD,MAAM,GACnCE,UAAW,W,EAMnBC,kBAAoB,SAACrB,GACnB,IAAMsB,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,QADhB,uBAGhC,YAAiBM,EAASL,IAAIC,MAA9B,+CAAqC,CAAC,IAA7BX,EAA4B,QAC/BA,EAAKA,OAASP,EAChBO,EAAKa,UAAY,OAEjBb,EAAKa,UAAY,QAPW,kFAUhC,EAAKtC,MAAM4C,YAAY1B,GACvB,EAAK2B,SAAS,CAAEV,IAAKK,EAASL,O,wEAI9B,OACE,yBAAK5B,UAAWL,IAAQ+B,UACtB,6BACE,yBAAK1B,UAAWL,IAAQ4C,YACtB,kBAAC,EAAD,eACErB,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,KAEnB,kBAAC,EAAD,eACEJ,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,KAEnB,kBAAC,EAAD,eACEJ,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,MAIrB,yBAAKtB,UAAWL,IAAQ4C,YACtB,kBAAC,EAAD,eACErB,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,KAEnB,kBAAC,EAAD,eACEJ,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,KAEnB,kBAAC,EAAD,eACEJ,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,MAGrB,yBAAKtB,UAAWL,IAAQ4C,YACtB,kBAAC,EAAD,eACErB,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,KAEnB,kBAAC,EAAD,eACEJ,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,KAEnB,kBAAC,EAAD,eACEJ,KAAMC,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,KAC9Bd,MAAOe,KAAKa,mBACR,CAAEpB,OAAQO,KAAKQ,MAAMC,IAAIC,MAAM,GAAGE,WACjCZ,KAAK1B,MAAM+C,YAAYC,SAAStB,KAAKQ,MAAMC,IAAIC,MAAM,GAAGX,MACzD,CAAEI,WAAW,GACb,CAAEA,WAAW,Y,GA1IRG,a,iCCERP,EAJF,SAACzB,GACZ,OAAO,yBAAKO,UAAWL,IAAQ+C,MAAOjD,EAAMyB,O,iBCc/ByB,EAbE,SAAClD,GAChB,OACE,yBAAKO,UAAWL,IAAQgD,UACrBlD,EAAMoC,MAAMe,KAAI,SAAC1B,GAChB,OAAO,kBAACwB,EAAD,CAAMG,IAAK3B,EAAMA,KAAMA,OAEhC,yBAAKf,QAASV,EAAMqD,UAAW9C,UAAWL,IAAQoD,MAChD,uBAAG/C,UAAW,CAAC,MAAO,mBAAmBE,KAAK,UCkBvC8C,EAzBO,SAACvD,GACrB,IAAMwD,EAAWxD,EAAMoC,MACnBnC,EAAS,CAACC,IAAQuD,eAQtB,OAPwB,IAApBD,EAASE,OACXzD,EAAOI,KAAKH,IAAQyD,mBAEhB1D,EAAO+C,SAAS9C,IAAQyD,oBAC1B1D,EAAO0B,IAAIzB,IAAQyD,mBAIrB,yBAAKpD,UAAWN,EAAOQ,KAAK,MAC1B,wBAAIF,UAAWL,IAAQ0D,mBAAvB,kBACCJ,EAASL,KAAI,SAACU,EAAUC,GACvB,OACE,kBAAC,EAAD,CACEV,IAAKU,EACL1B,MAAOyB,EACPR,UAAWrD,EAAMqD,UAAUtB,U,EAAW+B,EAAOD,U,iBCF1CE,EAfD,SAAC/D,GACb,OACE,yBAAKO,UAAWL,IAAQ8D,OACrBhE,EAAMmB,OACL,kBAACsC,EAAD,CAAerB,MAAOpC,EAAMoC,MAAOiB,UAAWrD,EAAMqD,YAClD,KACJ,kBAAC,EAAD,CACET,YAAa5C,EAAM4C,YACnB1B,SAAUlB,EAAMkB,SAChB6B,YAAa/C,EAAM+C,YACnBV,YAAarC,EAAMqC,gBCyErB4B,EAAe,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAMjD5B,EA7FA,CACT6B,KAAM,CACJ9B,MAAO,CACL,QACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,SAEF+B,UAAW,CAAC,WAAY,SAAU,WAAY,OAAQ,eAExDC,KAAM,CACJhC,MAAO,CACL,MACA,OACA,WACA,MACA,QACA,OACA,MACA,MACA,QAEF+B,UAAW,CAAC,UAAW,aAAc,gBAAiB,YAExDE,KAAM,CACJjC,MAAO,CACL,SACA,QACA,MACA,KACA,MACA,QACA,OACA,KACA,OAEF+B,UAAW,CAAC,WAAY,QAAS,QAAS,YAAa,WAEzDG,KAAM,CACJlC,MAAO,CACL,OACA,OACA,MACA,QACA,MACA,QACA,QACA,MACA,SAEF+B,UAAW,CAAC,eAAgB,aAAc,YAAa,WAEzDI,KAAM,CACJnC,MAAO,CACL,SACA,QACA,MACA,QACA,QACA,MACA,OACA,KACA,QAEF+B,UAAW,CAAC,YAAa,SAAU,aAAc,SAAU,WAE7DK,KAAM,CACJpC,MAAO,CACL,MACA,MACA,OACA,UACA,UACA,MACA,MACA,OACA,QAEF+B,UAAW,CAAC,UAAW,aAAc,UAAW,UAAW,aAOjDF,EAAaQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAaP,UC0CtDkB,E,2MA9Hb1C,MAAQ,CACNG,YAAaA,EACbwC,iBAAiB,EACjBC,aAAc,GACd5D,SAAU,KACV6B,YAAa,GACbgC,aAAa,EACbC,eAAe,EACfC,eAAgB,I,EAGlBC,uBAAyB,WACvB,IAAMnC,EAAW,YAAO,EAAKb,MAAMa,aAEnC,GADmB,YAAO,EAAKb,MAAMa,YAAYoC,KAAKC,MACpCpC,SAAS,EAAKd,MAAMhB,UACpC,EAAK2B,SAAS,CAAEkC,aAAa,QAD/B,CAIAhC,EAAY1C,KAAK,EAAK6B,MAAMhB,UAC5B,IAAMmE,EAAe,GACrBA,EAAahF,KAAK,EAAK6B,MAAMhB,UAC7B,IAAMoE,EAAS,YAAO,EAAKpD,MAAM4C,cACjCQ,EAAUjF,KAAKgF,GACf,EAAKxC,SAAS,CACZiC,aAAcQ,EACdT,iBAAiB,EACjB9B,YAAaA,EACbgC,aAAa,M,EAIjBQ,oBAAsB,WACpB,IAAMxC,EAAW,YAAO,EAAKb,MAAMa,aAEnC,GADmB,YAAO,EAAKb,MAAMa,YAAYoC,KAAKC,MACpCpC,SAAS,EAAKd,MAAMhB,UACpC,EAAK2B,SAAS,CAAEkC,aAAa,QAD/B,CAIAhC,EAAY1C,KAAK,EAAK6B,MAAMhB,UAC5B,IAAMoE,EAAY7C,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAM4C,eAC9BQ,EAAUA,EAAU5B,OAAS,GACrCrD,KAAK,EAAK6B,MAAMhB,UACjC,EAAK2B,SAAS,CACZiC,aAAcQ,EACdvC,YAAaA,EACbgC,aAAa,M,EAIjBS,kBAAoB,SAACtE,GACnB,EAAK2B,SAAS,CAAE3B,SAAUA,K,EAG5BuE,iBAAmB,SAACC,EAAU7B,GAC5B,IACM8B,EADW,YAAO,EAAKzD,MAAMa,aACI6C,QACrC,SAACC,GAAD,OAAchC,EAASb,SAAS6C,MAE5BC,EAAY,YAAO,EAAK5D,MAAM4C,cACpCgB,EAAaC,OAAOL,EAAU,GAC9B,EAAK7C,SAAS,CACZiC,aAAcgB,EACd/C,YAAa4C,IAGmB,IAA9BA,EAAmBjC,QACrB,EAAKb,SAAS,CAAEgC,iBAAiB,K,EAIrCmB,kBAAoB,WAClB,IAAM5D,EAAQ,GACI,YAAO,EAAKF,MAAM4C,cACvB3B,KAAI,SAAC8C,GAChB,OAAO7D,EAAM/B,KAAK4F,EAAcxF,KAAK,QAEvC,EAAKoC,SAAS,CAAEoC,eAAgB7C,IAChC,IAAM8D,EAAU7D,EAAY8B,UACX+B,EAAQC,OAAM,SAACC,GAAD,OAAQhE,EAAMY,SAASoD,MAEpDC,MAAM,8CAAgDH,EAAQzF,KAAK,OAEnE4F,MAAM,0CAA4CH,EAAQzF,KAAK,OAEjE6F,OAAOC,SAASC,U,wEAIhB,OACE,yBAAKjG,UAAWL,IAAQ0E,WACtB,wCACA,uBACErE,UAAWL,IAAQuG,QACnBC,MAAO,CAAEC,cAAe,QAASC,MAAO,UAF1C,eAIe,IACb,0BACEF,MAAO,CAAEG,WAAY,OAAQD,MAAO,SAAUE,SAAU,WAEvDzE,EAAY8B,UAAUT,QACjB,IATV,uCAYA,kBAAC3C,EAAD,CACEC,aAAcU,KAAK6D,oBACnBnE,gBAAiBM,KAAKwD,uBACtB7D,gBAAiBK,KAAKsE,kBACtB7E,OAAQO,KAAKQ,MAAMhB,SACnBD,QAASS,KAAKQ,MAAM2C,gBACpBE,YAAarD,KAAKQ,MAAM6C,YACxBzD,kBAAmBI,KAAKQ,MAAM2C,kBAEhC,kBAACb,EAAD,CACE3B,YAAaX,KAAKQ,MAAMG,YACxBO,YAAalB,KAAK8D,kBAClBpD,MAAOV,KAAKQ,MAAM4C,aAClB3D,OAAQO,KAAKQ,MAAM2C,gBACnB3D,SAAUQ,KAAKQ,MAAMhB,SACrB6B,YAAarB,KAAKQ,MAAMa,YACxBM,UAAW3B,KAAK+D,wB,GAxHFzD,aCMT+E,MARf,WACE,OACE,yBAAKxG,UAAU,OACb,kBAAC,EAAD,QCKcyG,QACW,cAA7BV,OAAOC,SAASU,UAEe,UAA7BX,OAAOC,SAASU,UAEhBX,OAAOC,SAASU,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.72b0eea0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Picture\":\"Picture_Picture__3BNJf\",\"show\":\"Picture_show__TaxmQ\",\"hide\":\"Picture_hide__3KxBE\",\"hidePic\":\"Picture_hidePic__3vE3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WordContainer\":\"WordContainer_WordContainer__2IY0i\",\"hideWordContainer\":\"WordContainer_hideWordContainer__1kHsH\",\"WordsSelectedText\":\"WordContainer_WordsSelectedText__1cltL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pictures\":\"Pictures_Pictures__gKl2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"btn\":\"Button_btn__3xaJM\",\"btnDanger\":\"Button_btnDanger__2sUsy\",\"Buttons\":\"Button_Buttons__1nSpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gameboard\":\"Gameboard_Gameboard__2I7SJ\",\"message\":\"Gameboard_message__3kTuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WordsRow\":\"WordsRow_WordsRow__3UfzJ\",\"icon\":\"WordsRow_icon__fgd3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Buttons\":\"Buttons_Buttons__2ykWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Word\":\"Word_Word__1DR1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__2Vm6-\"};","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst button = (props) => {\n  const styles = [classes.btn];\n  if (props.danger) {\n    styles.push(classes.btnDanger);\n  }\n  return (\n    <div className={classes.Button}>\n      <button\n        className={styles.join(\" \")}\n        onClick={props.click}\n        disabled={props.disabled}\n      >\n        {props.name}\n      </button>\n    </div>\n  );\n};\nexport default button;\n","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport classes from \"./Buttons.module.css\";\n\nconst buttons = (props) => {\n  return (\n    <div className={classes.Buttons}>\n      <Button\n        name=\"Add to the word\"\n        click={props.addWordClick}\n        disabled={!props.btnShow}\n        openWord={props.status}\n      />\n      <Button\n        name=\"Create new word\"\n        click={props.createWordClick}\n        disabled={!props.status}\n        openWord={props.status}\n      />\n      <Button\n        name=\"Match the words\"\n        click={props.matchWordsClick}\n        disabled={!props.matchWordEligible}\n        danger\n      />\n    </div>\n  );\n};\nexport default buttons;\n","import React, { Component } from \"react\";\nimport classes from \"./Picture.module.css\";\n\nclass Picture extends Component {\n  render() {\n    const styles = [classes.Picture, classes.show];\n    let word = this.props.word;\n    if (this.props.status === \"hide\") {\n      styles.pop(classes.show);\n      styles.push(classes.hide);\n      word = \"cheating uh\";\n    } else if (this.props.status === \"show\") {\n      styles.pop(classes.hide);\n      styles.push(classes.show);\n      word = this.props.word;\n    }\n\n    if (this.props.invisible) {\n      styles.push(classes.hidePic);\n    }\n\n    return (\n      <div\n        onClick={this.props.click.bind(this, this.props.word)}\n        className={styles.join(\" \")}\n      >\n        <div>\n          <h3>{word}</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Picture;\n","import React, { Component } from \"react\";\nimport classes from \"./Pictures.module.css\";\nimport Picture from \"../../components/Picture/Picture\";\n\nclass Pictures extends Component {\n  state = {\n    img: {\n      words: [\n        {\n          word: this.props.wordLibrary.words[0],\n          imgStatus: \"hide\"\n        },\n        {\n          word: this.props.wordLibrary.words[1],\n          imgStatus: \"hide\"\n        },\n        {\n          word: this.props.wordLibrary.words[2],\n          imgStatus: \"hide\"\n        },\n        {\n          word: this.props.wordLibrary.words[3],\n          imgStatus: \"hide\"\n        },\n        {\n          word: this.props.wordLibrary.words[4],\n          imgStatus: \"hide\"\n        },\n        {\n          word: this.props.wordLibrary.words[5],\n          imgStatus: \"hide\"\n        },\n        {\n          word: this.props.wordLibrary.words[6],\n          imgStatus: \"hide\"\n        },\n        {\n          word: this.props.wordLibrary.words[7],\n          imgStatus: \"hide\"\n        },\n        {\n          word: this.props.wordLibrary.words[8],\n          imgStatus: \"hide\"\n        }\n      ]\n    }\n  };\n\n  imageClickHandler = (openWord) => {\n    const newState = JSON.parse(JSON.stringify(this.state));\n\n    for (let word of newState.img.words) {\n      if (word.word === openWord) {\n        word.imgStatus = \"show\";\n      } else {\n        word.imgStatus = \"hide\";\n      }\n    }\n    this.props.clickedWord(openWord);\n    this.setState({ img: newState.img });\n  };\n\n  render() {\n    return (\n      <div className={classes.Pictures}>\n        <div>\n          <div className={classes.PictureRow}>\n            <Picture\n              word={this.state.img.words[0].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[0].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[0].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n            <Picture\n              word={this.state.img.words[1].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[1].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[1].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n            <Picture\n              word={this.state.img.words[2].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[2].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[2].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n          </div>\n\n          <div className={classes.PictureRow}>\n            <Picture\n              word={this.state.img.words[3].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[3].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[3].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n            <Picture\n              word={this.state.img.words[4].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[4].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[4].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n            <Picture\n              word={this.state.img.words[5].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[5].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[5].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n          </div>\n          <div className={classes.PictureRow}>\n            <Picture\n              word={this.state.img.words[6].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[6].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[6].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n            <Picture\n              word={this.state.img.words[7].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[7].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[7].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n            <Picture\n              word={this.state.img.words[8].word}\n              click={this.imageClickHandler}\n              {...{ status: this.state.img.words[8].imgStatus }}\n              {...(this.props.hiddenWords.includes(this.state.img.words[8].word)\n                ? { invisible: true }\n                : { invisible: false })}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pictures;\n","import React from \"react\";\nimport classes from \"./Word.module.css\";\nconst word = (props) => {\n  return <div className={classes.Word}>{props.word}</div>;\n};\n\nexport default word;\n","import React from \"react\";\nimport Word from \"../Word/Word\";\nimport classes from \"./WordsRow.module.css\";\n\nconst WordsRow = (props) => {\n  return (\n    <div className={classes.WordsRow}>\n      {props.words.map((word) => {\n        return <Word key={word} word={word} />;\n      })}\n      <div onClick={props.iconClick} className={classes.icon}>\n        <i className={[\"far\", \"fa-window-close\"].join(\" \")}></i>\n      </div>\n    </div>\n  );\n};\n\nexport default WordsRow;\n","import React from \"react\";\nimport classes from \"./WordContainer.module.css\";\nimport WordsRow from \"../WordsRow/WordsRow\";\n\nconst wordcontainer = (props) => {\n  const allWords = props.words;\n  let styles = [classes.WordContainer];\n  if (allWords.length === 0) {\n    styles.push(classes.hideWordContainer);\n  } else {\n    if (styles.includes(classes.hideWordContainer)) {\n      styles.pop(classes.hideWordContainer);\n    }\n  }\n  return (\n    <div className={styles.join(\" \")}>\n      <h4 className={classes.WordsSelectedText}>Words Selected</h4>\n      {allWords.map((wordsSet, index) => {\n        return (\n          <WordsRow\n            key={index}\n            words={wordsSet}\n            iconClick={props.iconClick.bind(this, index, wordsSet)}\n          />\n        );\n      })}\n    </div>\n  );\n};\nexport default wordcontainer;\n","import React from \"react\";\nimport Pictures from \"../../containers/Pictures/Pictures\";\nimport WordContainer from \"../../components/WordContainer/WordContainer\";\nimport classes from \"./Board.module.css\";\n\nconst board = (props) => {\n  return (\n    <div className={classes.Board}>\n      {props.status ? (\n        <WordContainer words={props.words} iconClick={props.iconClick} />\n      ) : null}\n      <Pictures\n        clickedWord={props.clickedWord}\n        openWord={props.openWord}\n        hiddenWords={props.hiddenWords}\n        wordLibrary={props.wordLibrary}\n      />\n    </div>\n  );\n};\nexport default board;\n","const wordLib = {\n  gameWords: {\n    setA: {\n      words: [\n        \"stand\",\n        \"ing\",\n        \"ard\",\n        \"cow\",\n        \"hard\",\n        \"ship\",\n        \"yard\",\n        \"space\",\n        \"craft\"\n      ],\n      solutions: [\"standing\", \"coward\", \"hardship\", \"yard\", \"spacecraft\"]\n    },\n    setB: {\n      words: [\n        \"dom\",\n        \"free\",\n        \"ordinary\",\n        \"mac\",\n        \"extra\",\n        \"hine\",\n        \"bit\",\n        \"ion\",\n        \"exhi\"\n      ],\n      solutions: [\"freedom\", \"exhibition\", \"extraordinary\", \"machine\"]\n    },\n    setC: {\n      words: [\n        \"mature\",\n        \"spend\",\n        \"cry\",\n        \"gl\",\n        \"yph\",\n        \"stick\",\n        \"drum\",\n        \"pt\",\n        \"ing\"\n      ],\n      solutions: [\"spending\", \"crypt\", \"glyph\", \"drumstick\", \"mature\"]\n    },\n    setD: {\n      words: [\n        \"less\",\n        \"ions\",\n        \"yer\",\n        \"elect\",\n        \"pra\",\n        \"ested\",\n        \"inter\",\n        \"irr\",\n        \"egard\"\n      ],\n      solutions: [\"irregardless\", \"interested\", \"elections\", \"prayer\"]\n    },\n    setE: {\n      words: [\n        \"sponge\",\n        \"creat\",\n        \"top\",\n        \"uency\",\n        \"ivity\",\n        \"lap\",\n        \"freq\",\n        \"at\",\n        \"tack\"\n      ],\n      solutions: [\"frequency\", \"laptop\", \"creativity\", \"attack\", \"sponge\"]\n    },\n    setF: {\n      words: [\n        \"for\",\n        \"ion\",\n        \"high\",\n        \"attract\",\n        \"machine\",\n        \"est\",\n        \"der\",\n        \"blad\",\n        \"ever\"\n      ],\n      solutions: [\"forever\", \"attraction\", \"machine\", \"highest\", \"bladder\"]\n    }\n  }\n};\nconst wordSetArray = [\"setA\", \"setB\", \"setC\", \"setD\", \"setE\", \"setF\"];\n\n// Code to pick a random word List\nlet randomSet = wordSetArray[Math.floor(Math.random() * wordSetArray.length)];\n\nconst wordsSet = wordLib.gameWords[randomSet];\nexport const wordLibrary = wordsSet;\n","import React, { Component } from \"react\";\nimport classes from \"./Gameboard.module.css\";\nimport Buttons from \"../../components/Buttons/Buttons\";\nimport Board from \"../../components/Board/Board\";\nimport { wordLibrary } from \"../../components/WordLibrary/WordLibrary\";\n\nclass Gameboard extends Component {\n  state = {\n    wordLibrary: wordLibrary,\n    addWordEligible: false,\n    createdWords: [],\n    openWord: null,\n    hiddenWords: [],\n    wordAddable: true,\n    matchEligible: false,\n    finalizedWords: []\n  };\n\n  createWordClickHandler = () => {\n    const hiddenWords = [...this.state.hiddenWords];\n    const flattendWords = [...this.state.hiddenWords.flat(Infinity)];\n    if (flattendWords.includes(this.state.openWord)) {\n      this.setState({ wordAddable: false });\n      return;\n    }\n    hiddenWords.push(this.state.openWord);\n    const newWordArray = [];\n    newWordArray.push(this.state.openWord);\n    const wordsCopy = [...this.state.createdWords];\n    wordsCopy.push(newWordArray);\n    this.setState({\n      createdWords: wordsCopy,\n      addWordEligible: true,\n      hiddenWords: hiddenWords,\n      wordAddable: true\n    });\n  };\n\n  addWordClickHandler = () => {\n    const hiddenWords = [...this.state.hiddenWords];\n    const flattendWords = [...this.state.hiddenWords.flat(Infinity)];\n    if (flattendWords.includes(this.state.openWord)) {\n      this.setState({ wordAddable: false });\n      return;\n    }\n    hiddenWords.push(this.state.openWord);\n    const wordsCopy = JSON.parse(JSON.stringify(this.state.createdWords));\n    const lastElementArray = wordsCopy[wordsCopy.length - 1];\n    lastElementArray.push(this.state.openWord);\n    this.setState({\n      createdWords: wordsCopy,\n      hiddenWords: hiddenWords,\n      wordAddable: true\n    });\n  };\n\n  clikedWordHandler = (openWord) => {\n    this.setState({ openWord: openWord });\n  };\n\n  rowDeleteHandler = (rowIndex, wordsSet) => {\n    const hiddenWords = [...this.state.hiddenWords];\n    const updatedHiddenWords = hiddenWords.filter(\n      (element) => !wordsSet.includes(element)\n    );\n    const wordsCreated = [...this.state.createdWords];\n    wordsCreated.splice(rowIndex, 1);\n    this.setState({\n      createdWords: wordsCreated,\n      hiddenWords: updatedHiddenWords\n    });\n\n    if (updatedHiddenWords.length === 0) {\n      this.setState({ addWordEligible: false });\n    }\n  };\n\n  matchWordsHandler = () => {\n    const words = [];\n    const createdWords = [...this.state.createdWords];\n    createdWords.map((individualArr) => {\n      return words.push(individualArr.join(\"\"));\n    });\n    this.setState({ finalizedWords: words });\n    const myWords = wordLibrary.solutions;\n    let allFounded = myWords.every((ai) => words.includes(ai));\n    if (allFounded) {\n      alert(\"YOU WIN, CONGRATS!! THE WORDS ARE :  \\n\\n\\n\" + myWords.join(\"\\n\"));\n    } else {\n      alert(\"YOU LOST, SORRY :( THE WORDS ARE \\n\\n\\n\" + myWords.join(\"\\n\"));\n    }\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <div className={classes.Gameboard}>\n        <h1>Match Me</h1>\n        <p\n          className={classes.message}\n          style={{ letterSpacing: \"0.5px\", color: \"white\" }}\n        >\n          Join to make{\" \"}\n          <span\n            style={{ fontWeight: \"bold\", color: \"yellow\", fontSize: \"larger\" }}\n          >\n            {wordLibrary.solutions.length}\n          </span>{\" \"}\n          words out of 9 subwords in the grid\n        </p>\n        <Buttons\n          addWordClick={this.addWordClickHandler}\n          createWordClick={this.createWordClickHandler}\n          matchWordsClick={this.matchWordsHandler}\n          status={this.state.openWord}\n          btnShow={this.state.addWordEligible}\n          wordAddable={this.state.wordAddable}\n          matchWordEligible={this.state.addWordEligible}\n        />\n        <Board\n          wordLibrary={this.state.wordLibrary}\n          clickedWord={this.clikedWordHandler}\n          words={this.state.createdWords}\n          status={this.state.addWordEligible}\n          openWord={this.state.openWord}\n          hiddenWords={this.state.hiddenWords}\n          iconClick={this.rowDeleteHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Gameboard;\n","import React from \"react\";\nimport \"./App.css\";\nimport Gameboard from \"./containers/Gameboard/Gameboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Gameboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}